一、如何提升系统性能，可用性及并发量
 1、提高硬件能力，增加系统服务器
 2、使用缓存 本地缓存Guava Cache 和分布式缓存Redis memcache
 3、消息队列
 4、分布式开发
 5、数据库分库分表
 6、集群
 7、CDN加速
 8、浏览器缓存
 9、合适的连接池
 10、多线程开发

二、设计高可用系统的常用手段
1、降级
2、限流 防止恶意请求流量
3、缓存
4、超时和重试机制
5、回滚机制

三、现代互联网应用系统通常有哪些特点
1、高并发 大流量
2、高可用
3、海量数据
4、用户分布广泛 网络情况复杂
5、安全环境恶劣
6、需求快速变更，发布频繁
7、渐进式发展

四、谈谈对微服务领域知识的了解和认识
1、RPC、网关、服务发现、配置管理、限流熔断、分布式链路跟踪

五、性能测试
1、基准测试
2、负载测试
3、压力测试
4、稳定性测试

六、大表优化
1、限定数据查询范围
2、读写分离
3、垂直分区
4、水平分区
5、数据库分片的常见方式：客户端代理，分片逻辑在客户端，通过封装jdbc来实现 Sharding-JDBC、阿里的TDDL；中间件代理，通过在应用和数据库中间加一层代理，Mycat、Atlas、DDB

七、在系统中使用消息队列能带来什么好处？
1、通过异步处理提高系统性能
2、消息队列具有很好的削峰作用，通过异步处理，将短时间高并发产生的事务消息存储在消息队列中，从而削平高峰期的并发事务
3、降低系统耦合性

八、对CAP定理、BASE理论的了解
1、一致性、可用性、分区容错性
2、基本可用、软状态、最终一致性
